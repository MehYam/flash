<?xml version="1.0" encoding="utf-8"?>
<s:WindowedApplication xmlns:fx="http://ns.adobe.com/mxml/2009" 
					   xmlns:s="library://ns.adobe.com/flex/spark" 
					   xmlns:mx="library://ns.adobe.com/flex/mx">
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	<s:Button x="109" y="80" label="GO" click="go()"/>
	<s:SpriteVisualElement x="200" y="200" id="sve" />
	<fx:Script>
		<![CDATA[
			
			import flash.filters.BitmapFilterQuality;
			import flash.filters.BitmapFilter;
			import flash.filters.BlurFilter;
			
			import mx.graphics.codec.PNGEncoder;
			
			private function go():void
			{
				openTrackURL("file://c:/source/flash/game1/assets/master.swf");
			}
			
			private var _loader:Loader;
			private function openTrackURL(url:String):void
			{
				_loader = new Loader;
				_loader.load(new URLRequest(url));
				_loader.contentLoaderInfo.addEventListener(Event.COMPLETE, onLoaded, false, 0, true);
			}
			private function onLoaded(e:Event):void
			{
				const assets:Array = [
				"ship2_0",
				"ship2_0_0",
				"ship2_0_1",
				"ship2_1",
				"ship2_1_0",
				"ship2_1_1",
				"ship2_2",
				"ship2_2_0",
				"ship2_2_1",
				"ship2_3",
				"ship2_3_0",
				"ship2_3_1",
				"ship2_4",
				"ship2_4_0",
				"ship2_4_1",
				"ship2_5",
				"ship2_5_0",
				"ship2_5_1",
				"ship2_6",
				"ship2_6_0",
				"ship2_6_1",
				"ship2_7",
				"ship2_7_0",
				"ship2_7_1",
				"ship2_8",
				"ship2_9",
				"ship2_9_1",
				"ship2_9_2",
				"ship2_10",
				"ship2_10_1",
				"ship2_10_2",
				"ship2_11",
				"ship2_11_1",
				"ship2_11_2",
				"ship2_12",
				"ship2_12_0",
				"ship2_12_1",
				"rocket0",
				"rocket1",
				"rocket2",
				"rocket3",
				"flame",
				"blueflame",
				"shield",
				"explosion1",
				"explosion2",
				"explosion3",
				"explosion4",
				"explosion5",
				"explosionsmall1",
				"explosionsmall2",
				"smoke1",
				"smoke2",
				"tankhull0",
				"tankhull1",
				"tankhull2",
				"tankhull3",
				"tankhull4",
				"tankturret0",
				"tankturret1",
				"tankturret2",
				"tankturret3",
				"tankturret4",
				"tanktread",
				"tanktreadtop",
				"cannonround0",
				"cannonround1",
				"muzzleflash0",
				"muzzleflash1",
				"muzzleflash2",
				"checkmark",
				"arrow",
				"lock",
				"question",
				"planeIcon",
				"tankIcon"];

				const filterMap:Dictionary = new Dictionary;
				filterMap["flame"] = s_blur;
				filterMap["blueflame"] = s_blur;
				filterMap["shield"] = s_blur;
				filterMap["explosion1"] = s_blurHeavy;
				filterMap["explosion2"] = s_blurHeavy;
				filterMap["explosion3"] = s_blurHeavy;
				filterMap["explosion4"] = s_blurHeavy;
				filterMap["explosion5"] = s_blurHeavy;
				filterMap["explosionsmall1"] = s_blur;
				filterMap["explosionsmall2"] = s_blur;
				filterMap["smoke1"] = s_blurHeavy;
				filterMap["smoke2"] = s_blurHeavy;
				filterMap["muzzleflash0"] = s_blur;
				filterMap["muzzleflash1"] = s_blur;
				filterMap["muzzleflash2"] = s_blur;
				
				for each (var name:String in assets)
				{
					extractAndSave(_loader, filterMap, name);
				}
				save(createFusionBlast(0xffffff), "fusionBlast");
				save(createBullet(0xffffff, 8, 8/5), "bullet");
				save(createLaser(0xffffff), "laser");
			}
			static private var s_blurLight:Array = [new BlurFilter(3, 3, BitmapFilterQuality.MEDIUM)];
			static private var s_blur:Array = [new BlurFilter(5, 5, BitmapFilterQuality.MEDIUM)];
			static private var s_blurHeavy:Array = [new BlurFilter(25, 25, BitmapFilterQuality.LOW)];
			
			private function extractAndSave(loader:Loader, filters:Dictionary, name:String):void
			{
				const type:Class = Class(_loader.contentLoaderInfo.applicationDomain.getDefinition(name));
				const obj:DisplayObject = new type() as DisplayObject;

				const filter:Array = filters[name];
				if (filter)
				{
					obj.filters = filter;
				}
				save(obj, name);
			}
			// hacks, this whole program is a quick hack.....
			static private function createFusionBlast(color:int):DisplayObject
			{
				const HEIGHT:Number = 20;
				const WIDTH:Number = 10;

				var blast:Shape = new Shape;
				blast.graphics.lineStyle(0, 0, 0);
				blast.graphics.beginFill(color, 0.5);
				blast.graphics.drawRoundRect(-WIDTH/2, -HEIGHT/2, WIDTH, HEIGHT, 4, 4);
				blast.graphics.endFill();
				return blast;
			}
			static private function createLaser(color:uint):DisplayObject
			{
				const LASER_LENGTH:Number = 10;
				var bullet:Shape = new Shape;
				bullet.graphics.lineStyle(3, color);
				bullet.graphics.moveTo(0, -LASER_LENGTH/2);
				bullet.graphics.lineTo(0, LASER_LENGTH/2);
				return bullet;
			}
			static private function createBullet(color:uint, outerRadius:Number, innerRadius:Number):DisplayObject
			{
				var wo:Shape = new Shape;
				wo.graphics.lineStyle(1, color);
				wo.graphics.beginFill(color);
				wo.graphics.moveTo(0, -outerRadius);
				wo.graphics.lineTo(-innerRadius, -innerRadius);
				wo.graphics.lineTo(-outerRadius, 0);
				wo.graphics.lineTo(-innerRadius, innerRadius);
				wo.graphics.lineTo(0, outerRadius);
				wo.graphics.lineTo(innerRadius, innerRadius);
				wo.graphics.lineTo(outerRadius, 0);
				wo.graphics.lineTo(innerRadius, -innerRadius);
				wo.graphics.lineTo(0, -outerRadius);
				wo.graphics.endFill();
				return wo;
			}

			static private function getBitmap(target:DisplayObject, scale:Number):BitmapData
			{
				const bounds:Rectangle = target.getBounds(target);
				const margin:Number = target.filters.length > 0 ? 5 : 0; // add some margin if a filter's been put on it
				bounds.inflate(margin, margin);
				
				var bitmapData:BitmapData = new BitmapData(bounds.width * scale, bounds.height * scale, true, 0);
				
				var matrix:Matrix = new Matrix;
				matrix.translate(-bounds.left, -bounds.top);
				matrix.scale(scale, scale);
				bitmapData.draw(target, matrix);
				return bitmapData;
			}
			private function save(obj:DisplayObject, name:String):void
			{
				var bmd:BitmapData = getBitmap(obj, 2); 
				
				var encoder:PNGEncoder = new PNGEncoder;
				var pngFile:ByteArray = encoder.encode(bmd);
				
				var file:File = new File("c:/source/temp/" + name + ".png");
				var stream:FileStream = new FileStream();
				stream.open(file, FileMode.WRITE);
				stream.writeBytes(pngFile);
				stream.close();
			}

		]]>
	</fx:Script>
</s:WindowedApplication>
