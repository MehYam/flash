<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:mx="library://ns.adobe.com/flex/mx"
		 creationComplete="onInit()">
	<fx:Declarations>
	</fx:Declarations>
	<s:DataGrid
		id="grid"
		width="100%" height="100%" 
		sortableColumns="false"
		editable="true"
	>
		<s:columns>
			<s:ArrayList>
				<s:GridColumn dataField="name" headerText="Item" editable="false"/>
				<s:GridColumn dataField="id" headerText="ID" editable="false" width="40"/>
				<s:GridColumn dataField="colors" headerText="Style"/>
				<s:GridColumn dataField="price" headerText="Price" formatter="{Utils.currencyFormatter}"/>
				<s:GridColumn dataField="count" labelFunction="countLabelFunction" headerText="No." width="40"/>
				<s:GridColumn labelFunction="totalLabelFunction" headerText="Total" formatter="{Utils.currencyFormatter}" editable="false"/>
			</s:ArrayList>
		</s:columns>
	</s:DataGrid>
	<fx:Script>
		<![CDATA[
			import mx.collections.IList;
			private function onInit():void			{			}
			static private function totalLabelFunction(itemObj:Object, column:GridColumn):String
			{
				return column.formatter.format(itemObj.price * itemObj.count);
			}
			static private function countLabelFunction(itemObj:Object, column:GridColumn):String
			{
				// a number formatter would be a cooler way of doing this, and should be more immune to things like sorting, etc
				return "x" + itemObj.count;
			}
			public function get selectedIndex():int
			{
				return grid.selectedIndex;
			}
			public function set selectedIndex(i:int):void
			{
				grid.selectedIndex = i;
				grid.ensureCellIsVisible(i);
			}
			public function set items(coll:IList):void
			{
				grid.dataProvider = coll;
			}
		]]>
	</fx:Script>
</s:Group>
