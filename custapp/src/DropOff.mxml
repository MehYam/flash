<?xml version="1.0" encoding="utf-8"?>
<s:VGroup xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:mx="library://ns.adobe.com/flex/mx"
		 creationComplete="onInit()" xmlns:local="*">
	<fx:Declarations>
		<s:CurrencyFormatter id="formatter" useCurrencySymbol="true"/>
	</fx:Declarations>
	<s:TileGroup id="itemButtons" horizontalGap="1" verticalGap="1"/>
	<s:HGroup>
		<s:Label text="Items:"/>
		<s:Label id="items" text="0" fontWeight="bold"/>
		<s:Label text="Total:"/>
		<s:Label id="total" text="0" fontWeight="bold"/>
	</s:HGroup>
	<local:OrderList id="order" width="100%" height="100%"/>
	<fx:Script>
		<![CDATA[
			import flash.text.engine.FontWeight;
			
			import mx.binding.utils.BindingUtils;
			import mx.core.IUIComponent;
			
			import spark.components.Button;
			
			import ui.MultilineButtonSkin;
			
			private var _clearButton:IUIComponent;
			private function onInit():void
			{
				for each (var item:Object in Data.instance.items)
				{
					var button:Button = new Button;
					button.setStyle("skinClass", MultilineButtonSkin);
					button.label = item.name + "\n" + formatter.format(item.price);
					button.height = 100;
					button.width = 100;
					button.name = item.id;
					button.addEventListener(MouseEvent.CLICK, onItem, false, 0, true);

					itemButtons.addElement(button);
				}
				var clearButton:Button = new Button;
				clearButton.height = 100;
				clearButton.width = 100;
				clearButton.setStyle("color", 0xff0000);
				clearButton.setStyle("fontWeight", FontWeight.BOLD);
				clearButton.label = "REMOVE";
				
				clearButton.addEventListener(MouseEvent.CLICK, onRemoveItem, false, 0, true);
				itemButtons.addElement(clearButton);
				_clearButton = clearButton;
				
				BindingUtils.bindSetter(onSelectionUpdate, order.grid, "selectedIndex");
			}
			private function onSelectionUpdate(foo:int):void
			{
				_clearButton.enabled = foo >= 0;
			}
			private function onItem(e:Event):void
			{
				for each (var item:Object in Data.instance.items.source)
				{
					if (item.id == parseInt(e.target.name))
					{
						order.addItem(item);
						updateTotal();
						break;
					}
				}
			}
			private function onRemoveItem(e:Event):void
			{
				order.removeItem(order.selectedIndex);
				order.grid.selectedIndex = order.grid.dataProvider.length - 1;
			}
			private function updateTotal():void
			{
				items.text = String(order.numItems);
				total.text = formatter.format(order.total);
			}
		]]>
	</fx:Script>
</s:VGroup>
