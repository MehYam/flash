<?xml version="1.0" encoding="utf-8"?>
<s:DataGrid xmlns:fx="http://ns.adobe.com/mxml/2009" 
			xmlns:s="library://ns.adobe.com/flex/spark" 
			xmlns:mx="library://ns.adobe.com/flex/mx"
			skinClass="ui.ConnectionsDataGridSkin"
			requestedRowCount="4" 
			sortableColumns="true"
			editable="true"
			creationComplete="onInit()"
			dataProvider="{_connectionData}"
			>
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	<s:columns>
		<s:ArrayList>
			<s:GridColumn headerText="Run" dataField="running" editable="false">
				<s:itemRenderer><fx:Component>
						<s:GridItemRenderer><s:CheckBox horizontalCenter="0" verticalCenter="0"/></s:GridItemRenderer>
				</fx:Component></s:itemRenderer>
			</s:GridColumn>
			<s:GridColumn headerText="Name" dataField="name" sortable="true"></s:GridColumn>
			<s:GridColumn headerText="Status" itemRenderer="ui.StatusGridItemRenderer" dataField="status" editable="false"></s:GridColumn>
			<s:GridColumn headerText="Source" itemRenderer="ui.SocketSourceGridItemRenderer" editable="false"></s:GridColumn>
			<s:GridColumn headerText="Source Type" itemRenderer="ui.SocketTypeGridItemRenderer" dataField="sourceType" editable="false"></s:GridColumn>
			<s:GridColumn headerText="Destination" itemRenderer="ui.SocketDestGridItemRenderer" editable="false"></s:GridColumn>
			<s:GridColumn headerText="Dest. Type" itemRenderer="ui.SocketTypeGridItemRenderer"  dataField="destType" editable="false"></s:GridColumn>
			<s:GridColumn headerText="Stats" dataField="stats" editable="false"></s:GridColumn>
			<s:GridColumn headerText="Buffer" dataField="buffer" editable="false"></s:GridColumn>
		</s:ArrayList>
	</s:columns>
<!--	<s:typicalItem>
		<fx:Object dataField1="Sample Data" dataField2="Sample Data" dataField3="Sample Data"></fx:Object>
	</s:typicalItem>-->

	<fx:Script>
		<![CDATA[
			import data.ConnectionItem;
			import data.Settings;
			
			import spark.components.gridClasses.GridColumn;
			import spark.events.GridEvent;
			
			private const _connectionData:ArrayList = new ArrayList([new ConnectionItem]);
			private function onInit():void
			{
				if (Settings.instance.data.connectionsColumnWidths)
				{
					for each(var column:GridColumn in columns.toArray())
					{
						const w:* = Settings.instance.data.connectionsColumnWidths[column.headerText];
						if (w)
						{
							column.width = w;
						}
					}
				}
				addEventListener(GridEvent.SEPARATOR_MOUSE_UP, onSeparatorResize, false, 0, true);
			}
			private function onSeparatorResize(unused:Event):void
			{
				Settings.instance.data.connectionsColumnWidths = {};
				for each(var column:GridColumn in columns.toArray())
				{
					Settings.instance.data.connectionsColumnWidths[column.headerText] = column.width;
				}
			}

		]]>
	</fx:Script>
</s:DataGrid>
